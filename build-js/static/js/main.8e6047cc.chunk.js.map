{"version":3,"sources":["components/MandelbrotVisualizer/MandelbrotVisualizer.module.css","components/RenderOptions/RenderOptions.module.css","components/MandelbrotVisualizer/utils/sleep.ts","components/RegionSelectableCanvas/utils/CanvasBackup.ts","components/RegionSelectableCanvas/RegionSelectableCanvas.tsx","MandelbrotSet/infrastructure/MandelbrotSetTypescript/Complex.ts","MandelbrotSet/infrastructure/MandelbrotSetTypescript/scale.ts","MandelbrotSet/infrastructure/MandelbrotSetTypescript/Color.ts","MandelbrotSet/infrastructure/MandelbrotSetTypescript/Themes.ts","MandelbrotSet/infrastructure/MandelbrotSetTypescript/mandelbrot-themes.ts","MandelbrotSet/infrastructure/MandelbrotSetTypescript/Palette.ts","MandelbrotSet/infrastructure/MandelbrotSetTypescript/MandelbrotSetTypescript.ts","components/MandelbrotVisualizer/MandelbrotVisualizer.tsx","components/RenderOptions/RenderOptions.tsx","serviceWorker.ts","index.tsx","components/App/App.tsx"],"names":["module","exports","sleep","ms","Promise","r","setTimeout","CanvasBackup","originalCanvas","originalCanvasCtx","backupCanvas","backupCanvasCtx","this","getContext","setupBackupCanvas","document","createElement","width","height","drawImage","RegionSelectableCanvas","props","canvas","canvasCtx","canvasBackup","canvasRatio","originX","originY","mouseX","mouseY","selectedAreaStartX","selectedAreaEndX","selectedAreaStartY","selectedAreaEndY","mouseIsDown","onRef","innerRef","handleMouseDown","e","pageX","pageY","save","handleMouseUp","onChangeSelectedRegion","handleMouseMove","calculateSelectionArea","restore","drawRawRect","drawFixedRect","xWidth","yWidth","xPreservingAspectRatioWidth","Math","min","yPreservingAspectRatioHeight","offsetX","offsetY","finalWidth","finalHeight","drawRect","color","startX","endX","startY","endY","strokeStyle","strokeRect","ref","window","innerWidth","innerHeight","className","onMouseDown","onMouseUp","onMouseMove","Component","Complex","a","b","other","abs","scale","value","leftMin","leftMax","rightMin","rightMax","Themes","Color","red","green","blue","round","c1","c2","ratio","THEMES_MAP","GRAY_SCALE","divisionPoints","colors","CYCLIC_GRAY_SCALE","RED_CYAN","BLUE_GOLD","EARTH_AND_SKY","HOT_AND_COLD","FIRE","SEA_SHORE","palette","divisionColors","position","nearestDivisionPoint","nearestDivisionIndex","getNearestDivisionPoint","leftPoint","colorBetween","theme","Palette","createStandardPalette","iterationsToColor","n","maxIterations","getColor","MandelbrotSetTypescript","minCorner","maxCorner","getA","toString","getB","startXPx","endXPx","startYPx","endYPx","minCornerA","maxCornerA","minCornerB","maxCornerB","c","z","square","add","hasEscaped","y","x","iterationsUntilItEscapes","push","getR","getG","Uint8ClampedArray","MandelbrotVisualizer","mandelbrotSet","refreshCanvas","zoomCanvas","then","previousProps","renderingKey","onChangeBounds","console","time","render","clamped","timeEnd","imageData","ImageData","putImageData","classes","RenderOptions","onChangeMaxIterations","corners","refresh","container","onSubmit","preventDefault","type","onChange","parseInt","target","Boolean","location","hostname","match","ReactDOM","useState","setMaxIterations","random","setRenderingKey","setCorners","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e6047cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"MandelbrotVisualizer_canvas__hswg-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RenderOptions_container__U4epK\"};","export const sleep = (ms: number) => new Promise(r => setTimeout(r, ms))\n","export class CanvasBackup {\n  private originalCanvas: HTMLCanvasElement\n  private originalCanvasCtx: CanvasRenderingContext2D \n  private backupCanvas: HTMLCanvasElement\n  private backupCanvasCtx: CanvasRenderingContext2D \n\n  constructor(originalCanvas: HTMLCanvasElement) {\n    this.originalCanvas = originalCanvas;\n    this.originalCanvasCtx = originalCanvas.getContext('2d') as CanvasRenderingContext2D;\n    \n    this.backupCanvas = this.setupBackupCanvas();\n    this.backupCanvasCtx = this.backupCanvas.getContext('2d') as CanvasRenderingContext2D;\n  }\n\n  setupBackupCanvas() {\n    const backupCanvas = document.createElement('canvas');\n    backupCanvas.width = this.originalCanvas.width;\n    backupCanvas.height = this.originalCanvas.height;\n    return backupCanvas;\n  }\n\n  save() {\n    this.backupCanvasCtx.drawImage(this.originalCanvas, 0, 0);\n  }\n\n  restore() {\n    this.originalCanvasCtx.drawImage(this.backupCanvas, 0, 0);\n  }\n}\n","import React, { Component } from \"react\"\n\nimport { CanvasBackup } from \"./utils/CanvasBackup\"\n\ninterface RegionSelectableCanvasProps {\n  innerRef: (element: HTMLCanvasElement) => void\n  onChangeSelectedRegion: (\n    selectedAreaStartX: number,\n    selectedAreaEndX: number,\n    selectedAreaStartY: number,\n    selectedAreaEndY: number,\n  ) => void\n  className: string\n}\n\nexport class RegionSelectableCanvas extends Component<\n  RegionSelectableCanvasProps\n> {\n  private canvas: HTMLCanvasElement\n  private canvasCtx: CanvasRenderingContext2D\n  private canvasBackup: CanvasBackup\n  private canvasRatio: number\n\n  private originX: number\n  private originY: number\n  private mouseX: number\n  private mouseY: number\n\n  private selectedAreaStartX: number\n  private selectedAreaEndX: number\n  private selectedAreaStartY: number\n  private selectedAreaEndY: number\n\n  private mouseIsDown: boolean\n\n  onRef = (canvas: HTMLCanvasElement) => {\n    this.canvas = canvas\n    this.canvasCtx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D\n    this.canvasBackup = new CanvasBackup(this.canvas)\n    this.canvasRatio = this.canvas.height / this.canvas.width\n\n    this.props.innerRef(canvas)\n  }\n\n  constructor(props: any) {\n    super(props)\n    this.canvas = (null as any) as HTMLCanvasElement\n    this.canvasCtx = (null as any) as CanvasRenderingContext2D\n    this.canvasBackup = (null as any) as CanvasBackup\n    this.canvasRatio = (null as any) as number\n    this.originX = 0\n    this.originY = 0\n    this.mouseX = 0\n    this.mouseY = 0\n    this.selectedAreaStartX = 0\n    this.selectedAreaEndX = 0\n    this.selectedAreaStartY = 0\n    this.selectedAreaEndY = 0\n    this.mouseIsDown = false\n  }\n\n  handleMouseDown = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    this.mouseIsDown = true\n    this.originX = e.pageX\n    this.originY = e.pageY\n\n    this.canvasBackup.save()\n  }\n\n  handleMouseUp = () => {\n    this.mouseIsDown = false\n    this.props.onChangeSelectedRegion(\n      this.selectedAreaStartX,\n      this.selectedAreaEndX,\n      this.selectedAreaStartY,\n      this.selectedAreaEndY,\n    )\n  }\n\n  calculateSelectionArea() {\n    const xWidth = this.mouseX - this.originX\n    const yWidth = this.mouseY - this.originY\n\n    const xPreservingAspectRatioWidth = Math.min(\n      xWidth,\n      yWidth / this.canvasRatio,\n    )\n    const yPreservingAspectRatioHeight = Math.min(\n      yWidth,\n      xWidth * this.canvasRatio,\n    )\n\n    const offsetX = (xWidth - xPreservingAspectRatioWidth) / 2\n    const offsetY = (yWidth - yPreservingAspectRatioHeight) / 2\n\n    const finalWidth = xPreservingAspectRatioWidth\n    const finalHeight = yPreservingAspectRatioHeight\n\n    this.selectedAreaStartX = this.originX + offsetX\n    this.selectedAreaStartY = this.originY + offsetY\n    this.selectedAreaEndX = this.selectedAreaStartX + finalWidth\n    this.selectedAreaEndY = this.selectedAreaStartY + finalHeight\n  }\n\n  handleMouseMove = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (this.mouseIsDown) {\n      this.mouseX = e.pageX\n      this.mouseY = e.pageY\n\n      this.calculateSelectionArea()\n      this.canvasBackup.restore()\n      this.drawRawRect()\n      this.drawFixedRect()\n    }\n  }\n\n  drawRawRect() {\n    this.drawRect(\n      \"#00FF00\",\n      this.originX,\n      this.mouseX,\n      this.originY,\n      this.mouseY,\n    )\n  }\n\n  drawFixedRect() {\n    this.drawRect(\n      \"#FF0000\",\n      this.selectedAreaStartX,\n      this.selectedAreaEndX,\n      this.selectedAreaStartY,\n      this.selectedAreaEndY,\n    )\n  }\n\n  drawRect(\n    color: string,\n    startX: number,\n    endX: number,\n    startY: number,\n    endY: number,\n  ) {\n    this.canvasCtx.strokeStyle = color\n    this.canvasCtx.strokeRect(startX, startY, endX - startX, endY - startY)\n  }\n\n  render() {\n    return (\n      <canvas\n        ref={this.onRef}\n        width={window.innerWidth}\n        height={window.innerHeight}\n        className={this.props.className}\n        onMouseDown={this.handleMouseDown}\n        onMouseUp={this.handleMouseUp}\n        onMouseMove={this.handleMouseMove}\n      />\n    )\n  }\n}\n","export class Complex {\r\n  private a: number\r\n  private b: number\r\n\r\n  constructor(a: number, b: number) {\r\n    this.a = a;\r\n    this.b = b;\r\n  }\r\n\r\n  square() {\r\n    const a = (this.a ** 2) - (this.b ** 2);\r\n    const b = 2 * this.a * this.b;\r\n    return new Complex(a, b);\r\n  }\r\n\r\n  add(other: Complex) {\r\n    return new Complex(this.a + other.a, this.b + other.b);\r\n  }\r\n\r\n  hasEscaped() {\r\n    return Math.abs(this.a + this.b) > 16;\r\n  }\r\n\r\n  /**\r\n   * Returns the real part\r\n   */\r\n  getA () {\r\n    return this.a\r\n  }\r\n\r\n  /**\r\n   * Returns the complex part\r\n   */\r\n  getB () {\r\n    return this.b\r\n  }\r\n}\r\n","export function scale(\r\n  value: number,\r\n  leftMin: number,\r\n  leftMax: number,\r\n  rightMin: number,\r\n  rightMax: number,\r\n) {\r\n  const leftSpan = leftMax - leftMin\r\n  const rightSpan = rightMax - rightMin\r\n  const valueScaled = (value - leftMin) / leftSpan\r\n  return rightMin + valueScaled * rightSpan\r\n}\r\n","export class Color {\r\n  constructor (private red: number, private green: number, private blue: number) {\r\n  }\r\n\r\n  getR() { return Math.round(this.red * 255) }\r\n  getG() { return Math.round(this.green * 255) }\r\n  getB() { return Math.round(this.blue * 255) }\r\n\r\n  static colorBetween (c1: Color, c2: Color, ratio: number): Color {\r\n    const a = c1.red + ratio * (c2.red - c1.red);\r\n    const b = c1.green + ratio * (c2.green - c1.green);\r\n    const c = c1.blue + ratio * (c2.blue - c1.blue);\r\n\r\n    return new Color(a, b, c);\r\n  }\r\n\r\n  static fromRGB (red: number, green: number, blue: number) {\r\n    return new Color(\r\n      red / 255,\r\n      green / 255,\r\n      blue / 255,\r\n    );\r\n  }\r\n}\r\n","import { Color } from \"./Color\"\r\nimport { DivisionPoints, Colors } from \"./Palette\"\r\n\r\nexport enum Themes {\r\n  GRAY_SCALE,\r\n  CYCLIC_GRAY_SCALE,\r\n  RED_CYAN,\r\n  BLUE_GOLD,\r\n  EARTH_AND_SKY,\r\n  HOT_AND_COLD,\r\n  FIRE,\r\n  TREE_COLORS,\r\n  SEA_SHORE,\r\n  RANDOM,\r\n}\r\n\r\nexport const THEMES_MAP: {\r\n  [key: string]: () => {\r\n    divisionPoints: DivisionPoints\r\n    colors: Colors\r\n  }\r\n} = {\r\n  [Themes.GRAY_SCALE]: () => ({\r\n    divisionPoints: [0, 1],\r\n    colors: [new Color(1, 1, 1), new Color(0, 0, 0)],\r\n  }),\r\n  [Themes.CYCLIC_GRAY_SCALE]: () => ({\r\n    divisionPoints: [0, 0.5, 1],\r\n    colors: [new Color(0, 0, 0), new Color(1, 1, 1), new Color(0, 0, 0)],\r\n  }),\r\n  [Themes.RED_CYAN]: () => ({\r\n    divisionPoints: [0, 0.5, 1],\r\n    colors: [new Color(1, 0, 0), new Color(0, 1, 1), new Color(1, 0, 0)],\r\n  }),\r\n  [Themes.BLUE_GOLD]: () => ({\r\n    divisionPoints: [0, 0.5, 1],\r\n    colors: [new Color(0.1, 0.1, 1), new Color(1, 0.6, 0), new Color(0.3, 0.3, 1)],\r\n  }),\r\n  [Themes.EARTH_AND_SKY]: () => ({\r\n    divisionPoints: [0, 0.15, 0.33, 0.67, 0.85, 1],\r\n    colors: [\r\n      new Color(1, 1, 1),\r\n      new Color(1, 0.8, 0),\r\n      new Color(0.53, 0.12, 0.075),\r\n      new Color(0, 0, 0.6),\r\n      new Color(0, 0.4, 1),\r\n      new Color(1, 1, 1),\r\n    ],\r\n  }),\r\n  [Themes.HOT_AND_COLD]: () => ({\r\n    divisionPoints: [0, 0.16, 0.5, 0.84, 1],\r\n    colors: [\r\n      new Color(1, 1, 1),\r\n      new Color(0, 0.4, 1),\r\n      new Color(0.2, 0.2, 0.2),\r\n      new Color(1, 0, 0.8),\r\n      new Color(1, 1, 1),\r\n    ],\r\n  }),\r\n  [Themes.FIRE]: () => ({\r\n    divisionPoints: [0, 0.17, 0.83, 1],\r\n    colors: [new Color(0, 0, 0), new Color(1, 0, 0), new Color(1, 1, 0), new Color(1, 1, 1)],\r\n  }),\r\n  [Themes.SEA_SHORE]: () => ({\r\n    divisionPoints: [0, 0.1667, 0.3333, 0.5, 0.6667, 0.8333, 1],\r\n    colors: [\r\n      new Color(0.7909, 0.9961, 0.763),\r\n      new Color(0.8974, 0.8953, 0.6565),\r\n      new Color(0.9465, 0.3161, 0.1267),\r\n      new Color(0.5184, 0.1109, 0.0917),\r\n      new Color(0.0198, 0.4563, 0.6839),\r\n      new Color(0.5385, 0.8259, 0.8177),\r\n      new Color(0.7909, 0.9961, 0.76),\r\n    ],\r\n  }),\r\n}\r\n","import { scale } from './scale';\r\nimport { Palette } from './Palette';\r\nimport { Themes } from \"./Themes\";\r\n\r\nconst palette = Palette.createStandardPalette(Themes.EARTH_AND_SKY)\r\n\r\nexport function iterationsToColor(n: number, maxIterations: number) {\r\n  return palette.getColor(scale(n, 0, maxIterations, 0, 1))\r\n}\r\n","import { Color } from \"./Color\"\r\nimport { Themes, THEMES_MAP } from \"./Themes\"\r\n\r\nexport type DivisionPoints = number[]\r\nexport type Colors = Array<Color>\r\n\r\n/**\r\n * Palette & themes originally made by David Eck\r\n * http://math.hws.edu/eck/js/mandelbrot/MB.html\r\n */\r\nexport class Palette {\r\n  constructor(private divisionPoints: DivisionPoints, private divisionColors: Color[]) {}\r\n\r\n  getNearestDivisionPoint(position: number) {\r\n    let nearestDivisionPoint = 1\r\n    while (position > this.divisionPoints[nearestDivisionPoint]) {\r\n      nearestDivisionPoint++\r\n    }\r\n    return nearestDivisionPoint\r\n  }\r\n\r\n  /**\r\n   * Resturns the Color that corresponds to the given Position\r\n   * @param position Value between 0 and 1\r\n   */\r\n  public getColor(position: number): Color {\r\n    const nearestDivisionIndex = this.getNearestDivisionPoint(position)\r\n    const leftPoint = this.divisionPoints[nearestDivisionIndex - 1]\r\n    const rightPoint = this.divisionPoints[nearestDivisionIndex]\r\n\r\n    const ratio = (position - leftPoint) / (rightPoint - leftPoint)\r\n\r\n    return Color.colorBetween(\r\n      this.divisionColors[nearestDivisionIndex - 1],\r\n      this.divisionColors[nearestDivisionIndex],\r\n      ratio,\r\n    )\r\n  }\r\n\r\n  static createStandardPalette(theme: Themes): Palette {\r\n    const { divisionPoints, colors } = THEMES_MAP[theme]()\r\n    return new Palette(divisionPoints, colors)\r\n  }\r\n}\r\n","// import Big from 'https://unpkg.com/big.js@5.2.2/big.mjs'\r\nimport { Complex } from \"./Complex\"\r\nimport { iterationsToColor } from \"./mandelbrot-themes\"\r\nimport { scale } from \"./scale\"\r\nimport { IMandelbrotSet } from \"../../domain/MandelbrotSet\"\r\n\r\nexport class MandelbrotSetTypescript implements IMandelbrotSet {\r\n  private minCorner: Complex\r\n  private maxCorner: Complex\r\n  private width: number\r\n  private height: number\r\n\r\n  constructor(width: number, height: number) {\r\n    this.width = width\r\n    this.height = height\r\n\r\n    const ratio = this.height / this.width\r\n    const initialWidth = 3\r\n\r\n    this.maxCorner = new Complex(initialWidth, initialWidth * ratio)\r\n    this.minCorner = new Complex(-initialWidth, -initialWidth * ratio)\r\n  }\r\n\r\n  public async minCornerA() {\r\n    return this.minCorner.getA().toString()\r\n  }\r\n  public async minCornerB() {\r\n    return this.minCorner.getB().toString()\r\n  }\r\n  public async maxCornerA() {\r\n    return this.maxCorner.getA().toString()\r\n  }\r\n  public async maxCornerB() {\r\n    return this.maxCorner.getB().toString()\r\n  }\r\n\r\n  async zoomCanvas(startXPx: number, endXPx: number, startYPx: number, endYPx: number) {\r\n    const minCornerA = scale(startXPx, 0, this.width, this.minCorner.getA(), this.maxCorner.getA())\r\n    const maxCornerA = scale(endXPx, 0, this.width, this.minCorner.getA(), this.maxCorner.getA())\r\n    const minCornerB = scale(startYPx, 0, this.height, this.minCorner.getB(), this.maxCorner.getB())\r\n    const maxCornerB = scale(endYPx, 0, this.height, this.minCorner.getB(), this.maxCorner.getB())\r\n\r\n    this.minCorner = new Complex(minCornerA, minCornerB)\r\n    this.maxCorner = new Complex(maxCornerA, maxCornerB)\r\n  }\r\n\r\n  private iterationsUntilItEscapes(c: Complex, maxIterations: number) {\r\n    let z = new Complex(0, 0)\r\n\r\n    for (let n = 0; n < maxIterations; n++) {\r\n      z = z.square().add(c)\r\n      if (z.hasEscaped()) {\r\n        return n\r\n      }\r\n    }\r\n\r\n    return maxIterations\r\n  }\r\n\r\n  async render(maxIterations = 100): Promise<Uint8ClampedArray> {\r\n    const minCorner = this.minCorner\r\n    const maxCorner = this.maxCorner\r\n\r\n    const colors = []\r\n\r\n    for (let y = 0; y < this.height; y++) {\r\n      for (let x = 0; x < this.width; x++) {\r\n        const c = new Complex(\r\n          scale(x, 0, this.width, minCorner.getA(), maxCorner.getA()),\r\n          scale(y, 0, this.height, minCorner.getB(), maxCorner.getB()),\r\n        )\r\n\r\n        const n = this.iterationsUntilItEscapes(c, maxIterations)\r\n        const color = iterationsToColor(n, maxIterations)\r\n        colors.push(color.getR())\r\n        colors.push(color.getG())\r\n        colors.push(color.getB())\r\n        colors.push(255)\r\n      }\r\n    }\r\n\r\n    return new Uint8ClampedArray(colors)\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\n\nimport { sleep } from \"./utils/sleep\"\nimport { RegionSelectableCanvas } from \"../RegionSelectableCanvas/RegionSelectableCanvas\"\nimport { IMandelbrotSet } from \"../../MandelbrotSet/domain/MandelbrotSet\"\nimport { MandelbrotSetWasm } from \"../../MandelbrotSet/infrastructure/MandelbrotSetWasm/MandelbrotSetWasm\"\nimport { MandelbrotSetTypescript } from \"../../MandelbrotSet/infrastructure/MandelbrotSetTypescript/MandelbrotSetTypescript\"\n\nimport classes from \"./MandelbrotVisualizer.module.css\"\n\ntype Corners = {\n  minCornerA: string\n  minCornerB: string\n  maxCornerA: string\n  maxCornerB: string\n}\n\ntype MandelbrotVisualizerProps = {\n  maxIterations: number\n  renderingKey: number\n  onChangeBounds: (corners: Corners) => void\n}\n\nexport class MandelbrotVisualizer extends Component<MandelbrotVisualizerProps> {\n  private mandelbrotSet: IMandelbrotSet\n  private canvas: HTMLCanvasElement\n  private canvasCtx: CanvasRenderingContext2D\n\n  constructor(props: any) {\n    super(props)\n\n    this.mandelbrotSet = (null as any) as IMandelbrotSet\n    this.canvasCtx = (null as any) as CanvasRenderingContext2D\n    this.canvas = (null as any) as HTMLCanvasElement\n  }\n\n  componentDidUpdate(previousProps: MandelbrotVisualizerProps) {\n    if (previousProps.renderingKey !== this.props.renderingKey) {\n      this.refreshCanvas()\n    }\n  }\n\n  onRef = (canvas: HTMLCanvasElement) => {\n    this.canvas = canvas\n    this.canvasCtx = canvas.getContext(\"2d\") as CanvasRenderingContext2D\n    this.mandelbrotSet = new MandelbrotSetTypescript(canvas.width, canvas.height)\n    this.refreshCanvas()\n  }\n\n  private onChangeSelectedRegion = (\n    startXPx: number,\n    endXPx: number,\n    startYPx: number,\n    endYPx: number,\n  ) => {\n    this.mandelbrotSet.zoomCanvas(startXPx, endXPx, startYPx, endYPx).then(() => {\n      this.refreshCanvas()\n    })\n  }\n\n  private async refreshCanvas() {\n    this.props.onChangeBounds({\n      minCornerA: await this.mandelbrotSet.minCornerA(),\n      minCornerB: await this.mandelbrotSet.minCornerB(),\n      maxCornerA: await this.mandelbrotSet.maxCornerA(),\n      maxCornerB: await this.mandelbrotSet.maxCornerB(),\n    })\n    await sleep(50)\n    console.time(\"render\")\n    const clamped: Uint8ClampedArray = await this.mandelbrotSet.render(this.props.maxIterations)\n    console.timeEnd(\"render\")\n    const imageData = new ImageData(clamped, this.canvas.width, this.canvas.height)\n    this.canvasCtx.putImageData(imageData, 0, 0)\n  }\n\n  render() {\n    return (\n      <RegionSelectableCanvas\n        innerRef={this.onRef}\n        className={classes.canvas}\n        onChangeSelectedRegion={this.onChangeSelectedRegion}\n      />\n    )\n  }\n}\n","import React, { FC } from \"react\"\n\nimport classes from \"./RenderOptions.module.css\"\n\ninterface RenderOptionsProps {\n  onChangeMaxIterations: (maxIterations: number) => void\n  maxIterations: number\n  corners: {\n    minCornerA: string\n    minCornerB: string\n    maxCornerA: string\n    maxCornerB: string\n  }\n  refresh: () => void\n}\n\nexport const RenderOptions: FC<RenderOptionsProps> = ({\n  onChangeMaxIterations,\n  maxIterations,\n  corners,\n  refresh,\n}) => (\n  <form\n    className={classes.container}\n    onSubmit={e => {\n      e.preventDefault()\n      refresh()\n    }}\n  >\n    <div>\n      <input type=\"text\" value={corners.minCornerA} />\n      <input type=\"text\" value={corners.minCornerB} />\n    </div>\n    <div>\n      <input type=\"text\" value={corners.maxCornerA} />\n      <input type=\"text\" value={corners.maxCornerB} />\n    </div>\n    <input\n      type=\"number\"\n      onChange={e => onChangeMaxIterations(parseInt(e.target.value))}\n      value={maxIterations}\n    />\n    <input type=\"submit\" value=\"Refresh\" />\n  </form>\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport { App } from \"./components/App/App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React, { FC, useState } from \"react\"\nimport { MandelbrotVisualizer } from \"../MandelbrotVisualizer/MandelbrotVisualizer\"\nimport { RenderOptions } from \"../RenderOptions/RenderOptions\"\n\nexport const App: FC = () => {\n  const [maxIterations, setMaxIterations] = useState(100)\n  const [renderingKey, setRenderingKey] = useState(Math.random())\n  const [corners, setCorners] = useState({\n    minCornerA: \"\",\n    minCornerB: \"\",\n    maxCornerA: \"\",\n    maxCornerB: \"\",\n  })\n\n  return (\n    <div>\n      <MandelbrotVisualizer\n        renderingKey={renderingKey}\n        maxIterations={maxIterations}\n        onChangeBounds={setCorners}\n      />\n      <RenderOptions\n        onChangeMaxIterations={setMaxIterations}\n        maxIterations={maxIterations}\n        refresh={() => setRenderingKey(Math.random())}\n        corners={corners}\n      />\n    </div>\n  )\n}\n"],"sourceRoot":""}
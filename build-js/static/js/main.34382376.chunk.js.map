{"version":3,"sources":["components/MandelbrotVisualizer/MandelbrotVisualizer.module.css","components/RenderOptions/RenderOptions.module.css","components/MandelbrotVisualizer/utils/sleep.ts","domain_ts/Complex.ts","domain_ts/scale.ts","domain_ts/Color.ts","domain_ts/Themes.ts","domain_ts/mandelbrot-themes.ts","domain_ts/Palette.ts","domain_ts/CanvasPixelDrawer.ts","domain_ts/MandelbrotSet.ts","components/RegionSelectableCanvas/utils/CanvasBackup.ts","components/RegionSelectableCanvas/RegionSelectableCanvas.tsx","components/MandelbrotVisualizer/MandelbrotVisualizer.tsx","components/RenderOptions/RenderOptions.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","canvas","container","sleep","ms","Promise","r","setTimeout","Complex","a","b","Object","classCallCheck","this","createClass","key","value","Math","pow","other","abs","scale","leftMin","leftMax","rightMin","rightMax","Themes","Color","red","green","blue","round","c1","c2","ratio","THEMES_MAP","_THEMES_MAP","defineProperty","GRAY_SCALE","divisionPoints","colors","CYCLIC_GRAY_SCALE","RED_CYAN","BLUE_GOLD","EARTH_AND_SKY","HOT_AND_COLD","FIRE","SEA_SHORE","palette","Palette","divisionColors","position","nearestDivisionPoint","nearestDivisionIndex","getNearestDivisionPoint","leftPoint","colorBetween","theme","_THEMES_MAP$theme","createStandardPalette","iterationsToColor","n","maxIterations","getColor","CanvasPixelDrawer","ctx","width","height","imageData","createImageData","buf","ArrayBuffer","data","length","buf8","Uint8ClampedArray","Uint32Array","x","y","color","setCanvasPixel","set","g","arguments","undefined","index","colorToBuffer","getR","getG","getB","MandelbrotSet","maxCorner","minCorner","canvasPixelDrawer","getA","toString","startXPx","endXPx","startYPx","endYPx","minCornerA","maxCornerA","minCornerB","maxCornerB","c","z","square","add","hasEscaped","dataStorage","getDataStorage","getHeight","getWidth","iterationsUntilItEscapes","setColor","putImageData","toImageData","CanvasBackup","originalCanvas","originalCanvasCtx","getContext","backupCanvas","setupBackupCanvas","backupCanvasCtx","document","createElement","drawImage","RegionSelectableCanvas","props","_this","possibleConstructorReturn","getPrototypeOf","call","onRef","canvasCtx","canvasBackup","canvasRatio","innerRef","handleMouseDown","e","mouseIsDown","originX","pageX","originY","pageY","save","handleMouseUp","onChangeSelectedRegion","selectedAreaStartX","selectedAreaEndX","selectedAreaStartY","selectedAreaEndY","handleMouseMove","mouseX","mouseY","calculateSelectionArea","restore","drawRawRect","drawFixedRect","xWidth","yWidth","xPreservingAspectRatioWidth","min","yPreservingAspectRatioHeight","offsetX","offsetY","finalWidth","finalHeight","drawRect","startX","endX","startY","endY","strokeStyle","strokeRect","react_default","ref","window","innerWidth","innerHeight","className","onMouseDown","onMouseUp","onMouseMove","Component","MandelbrotVisualizer","mandelbrotSet","refreshCanvas","zoomCanvas","previousProps","renderingKey","onChangeBounds","console","time","render","timeEnd","components_RegionSelectableCanvas_RegionSelectableCanvas","classes","RenderOptions","_ref","onChangeMaxIterations","refresh","react","onSubmit","preventDefault","type","onChange","parseInt","target","App","state","random","setState","_this2","components_MandelbrotVisualizer_MandelbrotVisualizer","RenderOptions_RenderOptions","Boolean","location","hostname","match","ReactDOM","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34382376.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"MandelbrotVisualizer_canvas__mZeq3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RenderOptions_container__2Ag6m\"};","export const sleep = (ms: number) => new Promise(r => setTimeout(r, ms))\r\n","export class Complex {\r\n  private a: number\r\n  private b: number\r\n\r\n  constructor(a: number, b: number) {\r\n    this.a = a;\r\n    this.b = b;\r\n  }\r\n\r\n  square() {\r\n    const a = (this.a ** 2) - (this.b ** 2);\r\n    const b = 2 * this.a * this.b;\r\n    return new Complex(a, b);\r\n  }\r\n\r\n  add(other: Complex) {\r\n    return new Complex(this.a + other.a, this.b + other.b);\r\n  }\r\n\r\n  hasEscaped() {\r\n    return Math.abs(this.a + this.b) > 16;\r\n  }\r\n\r\n  /**\r\n   * Returns the real part\r\n   */\r\n  getA () {\r\n    return this.a\r\n  }\r\n\r\n  /**\r\n   * Returns the complex part\r\n   */\r\n  getB () {\r\n    return this.b\r\n  }\r\n}\r\n","export function scale(value: number, leftMin: number, leftMax: number, rightMin: number, rightMax: number) {\r\n  const leftSpan = leftMax - leftMin;\r\n  const rightSpan = rightMax - rightMin;\r\n  const valueScaled = (value - leftMin) / leftSpan;\r\n  return rightMin + (valueScaled * rightSpan);\r\n}\r\n","export class Color {\r\n  constructor (private red: number, private green: number, private blue: number) {\r\n  }\r\n\r\n  getR() { return Math.round(this.red * 255) }\r\n  getG() { return Math.round(this.green * 255) }\r\n  getB() { return Math.round(this.blue * 255) }\r\n\r\n  static colorBetween (c1: Color, c2: Color, ratio: number): Color {\r\n    const a = c1.red + ratio * (c2.red - c1.red);\r\n    const b = c1.green + ratio * (c2.green - c1.green);\r\n    const c = c1.blue + ratio * (c2.blue - c1.blue);\r\n\r\n    return new Color(a, b, c);\r\n  }\r\n\r\n  static fromRGB (red: number, green: number, blue: number) {\r\n    return new Color(\r\n      red / 255,\r\n      green / 255,\r\n      blue / 255,\r\n    );\r\n  }\r\n}\r\n","import { Color } from \"./Color\";\r\nimport { DivisionPoints, Colors } from \"./Palette\";\r\n\r\nexport enum Themes {\r\n  GRAY_SCALE,\r\n  CYCLIC_GRAY_SCALE,\r\n  RED_CYAN,\r\n  BLUE_GOLD,\r\n  EARTH_AND_SKY,\r\n  HOT_AND_COLD,\r\n  FIRE,\r\n  TREE_COLORS,\r\n  SEA_SHORE,\r\n  RANDOM\r\n}\r\n\r\nexport const THEMES_MAP: {\r\n  [key: string]: () => {\r\n    divisionPoints: DivisionPoints;\r\n    colors: Colors;\r\n  };\r\n} = {\r\n  [Themes.GRAY_SCALE]: () => ({\r\n    divisionPoints: [0, 1],\r\n    colors: [\r\n      new Color(1, 1, 1),\r\n      new Color(0, 0, 0),\r\n    ]\r\n  }),\r\n  [Themes.CYCLIC_GRAY_SCALE]: () => ({\r\n    divisionPoints: [0, 0.5, 1],\r\n    colors: [\r\n      new Color(0, 0, 0),\r\n      new Color(1, 1, 1),\r\n      new Color(0, 0, 0),\r\n    ]\r\n  }),\r\n  [Themes.RED_CYAN]: () => ({\r\n    divisionPoints: [0, 0.5, 1],\r\n    colors: [\r\n      new Color(1, 0, 0),\r\n      new Color(0, 1, 1),\r\n      new Color(1, 0, 0),\r\n    ]\r\n  }),\r\n  [Themes.BLUE_GOLD]: () => ({\r\n    divisionPoints: [0, 0.5, 1],\r\n    colors: [\r\n      new Color(0.1, 0.1, 1),\r\n      new Color(1, 0.6, 0),\r\n      new Color(0.3, 0.3, 1),\r\n    ]\r\n  }),\r\n  [Themes.EARTH_AND_SKY]: () => ({\r\n    divisionPoints: [0, 0.15, 0.33, 0.67, 0.85, 1],\r\n    colors: [\r\n      new Color(1, 1, 1),\r\n      new Color(1, 0.8, 0),\r\n      new Color(0.53, 0.12, 0.075),\r\n      new Color(0, 0, 0.6),\r\n      new Color(0, 0.4, 1),\r\n      new Color(1, 1, 1),\r\n    ]\r\n  }),\r\n  [Themes.HOT_AND_COLD]: () => ({\r\n    divisionPoints: [0, 0.16, 0.5, 0.84, 1],\r\n    colors: [\r\n      new Color(1, 1, 1),\r\n      new Color(0, 0.4, 1),\r\n      new Color(0.2, 0.2, 0.2),\r\n      new Color(1, 0, 0.8),\r\n      new Color(1, 1, 1),\r\n    ]\r\n  }),\r\n  [Themes.FIRE]: () => ({\r\n    divisionPoints: [0, 0.17, 0.83, 1],\r\n    colors: [\r\n      new Color(0, 0, 0),\r\n      new Color(1, 0, 0),\r\n      new Color(1, 1, 0),\r\n      new Color(1, 1, 1),\r\n    ]\r\n  }),\r\n  [Themes.SEA_SHORE]: () => ({\r\n    divisionPoints: [0, 0.1667, 0.3333, 0.5, 0.6667, 0.8333, 1],\r\n    colors: [\r\n      new Color(0.7909, 0.9961, 0.763),\r\n      new Color(0.8974, 0.8953, 0.6565),\r\n      new Color(0.9465, 0.3161, 0.1267),\r\n      new Color(0.5184, 0.1109, 0.0917),\r\n      new Color(0.0198, 0.4563, 0.6839),\r\n      new Color(0.5385, 0.8259, 0.8177),\r\n      new Color(0.7909, 0.9961, 0.76)\r\n    ]\r\n  })\r\n};","import { scale } from './scale';\r\nimport { Palette } from './Palette';\r\nimport { Themes } from \"./Themes\";\r\n\r\nconst palette = Palette.createStandardPalette(Themes.EARTH_AND_SKY)\r\n\r\nexport function iterationsToColor(n: number, maxIterations: number) {\r\n  return palette.getColor(scale(n, 0, maxIterations, 0, 1))\r\n}\r\n","import { Color } from \"./Color\";\r\nimport { Themes, THEMES_MAP } from \"./Themes\";\r\n\r\nexport type DivisionPoints = number[];\r\nexport type Colors = Array<Color>;\r\n\r\n/**\r\n * Palette & themes originally made by David Eck\r\n * http://math.hws.edu/eck/js/mandelbrot/MB.html\r\n */\r\nexport class Palette {\r\n  constructor(\r\n    private divisionPoints: DivisionPoints,\r\n    private divisionColors: Color[]\r\n  ) {}\r\n\r\n  getNearestDivisionPoint (position: number) {\r\n    let nearestDivisionPoint = 1;\r\n    while (position > this.divisionPoints[nearestDivisionPoint]) {\r\n      nearestDivisionPoint++;\r\n    }\r\n    return nearestDivisionPoint\r\n  }\r\n\r\n  /**\r\n   * Resturns the Color that corresponds to the given Position\r\n   * @param position Value between 0 and 1\r\n   */\r\n  public getColor(position: number): Color {\r\n    const nearestDivisionIndex = this.getNearestDivisionPoint(position)\r\n    const leftPoint = this.divisionPoints[nearestDivisionIndex - 1]\r\n    const rightPoint = this.divisionPoints[nearestDivisionIndex]\r\n\r\n    const ratio = (position - leftPoint) / (rightPoint - leftPoint);\r\n\r\n    return Color.colorBetween(\r\n      this.divisionColors[nearestDivisionIndex - 1],\r\n      this.divisionColors[nearestDivisionIndex],\r\n      ratio\r\n    )\r\n  }\r\n\r\n  static createStandardPalette(theme: Themes): Palette {\r\n    const { divisionPoints, colors } = THEMES_MAP[theme]();\r\n    return new Palette(divisionPoints, colors);\r\n  }\r\n}\r\n","import { Color } from \"./Color\"\r\n\r\n/**\r\n * Allows drawing per-pixel in a Canvas\r\n * Main idea from: https://gist.github.com/biovisualize/5400576\r\n */\r\nexport class CanvasPixelDrawer {\r\n  private imageData: ImageData\r\n  private width: number\r\n  private height: number\r\n  private buf8: Uint8ClampedArray\r\n  private data: Uint32Array\r\n\r\n  constructor(ctx: CanvasRenderingContext2D, width: number, height: number) {\r\n    this.imageData = ctx.createImageData(width, height)\r\n    this.width = width\r\n    this.height = height\r\n\r\n    const buf = new ArrayBuffer(this.imageData.data.length)\r\n    this.buf8 = new Uint8ClampedArray(buf)\r\n    this.data = new Uint32Array(buf)\r\n  }\r\n\r\n  public getWidth() {\r\n    return this.width\r\n  }\r\n\r\n  public getHeight() {\r\n    return this.height\r\n  }\r\n\r\n  public setColor(x: number, y: number, color: Color) {\r\n    this.setCanvasPixel(x, y, color)\r\n  }\r\n  \r\n  public toImageData() {\r\n    this.imageData.data.set(this.buf8)\r\n    return this.imageData\r\n  }\r\n\r\n  private colorToBuffer(r: number, g: number, b: number, a = 255) {\r\n    return (a << 24) | (b << 16) | (g << 8) | r\r\n  }\r\n\r\n  private setCanvasPixel(x: number, y: number, color: Color) {\r\n    const index = y * this.width + x\r\n    this.data[index] = this.colorToBuffer(\r\n      color.getR(),\r\n      color.getG(),\r\n      color.getB()\r\n    )\r\n  }\r\n}\r\n","// import Big from 'https://unpkg.com/big.js@5.2.2/big.mjs'\r\nimport { Complex } from './Complex';\r\nimport { iterationsToColor } from './mandelbrot-themes';\r\nimport { scale } from './scale';\r\nimport { CanvasPixelDrawer } from './CanvasPixelDrawer';\r\n\r\nexport class MandelbrotSet {\r\n  private minCorner: Complex\r\n  private maxCorner: Complex\r\n  private width: number\r\n  private height: number\r\n  private canvasPixelDrawer: CanvasPixelDrawer | null\r\n\r\n  constructor(width: number, height: number) {\r\n    this.width = width\r\n    this.height = height\r\n    \r\n    const ratio = this.height / this.width\r\n    const initialWidth = 3\r\n    \r\n    this.maxCorner = new Complex(initialWidth, initialWidth * ratio)\r\n    this.minCorner = new Complex(-initialWidth, -initialWidth * ratio)\r\n    this.canvasPixelDrawer = null\r\n  }\r\n\r\n  public minCornerA () { return this.minCorner.getA().toString() }\r\n  public minCornerB () { return this.minCorner.getB().toString() }\r\n  public maxCornerA () { return this.maxCorner.getA().toString() }\r\n  public maxCornerB () { return this.maxCorner.getB().toString() }\r\n\r\n\r\n  zoomCanvas (startXPx: number, endXPx: number, startYPx: number, endYPx: number) {\r\n    const minCornerA = scale(startXPx, 0, this.width,  this.minCorner.getA(), this.maxCorner.getA())\r\n    const maxCornerA = scale(endXPx, 0, this.width,  this.minCorner.getA(), this.maxCorner.getA())\r\n    const minCornerB = scale(startYPx, 0, this.height, this.minCorner.getB(), this.maxCorner.getB())\r\n    const maxCornerB = scale(endYPx, 0, this.height, this.minCorner.getB(), this.maxCorner.getB())\r\n  \r\n    this.minCorner = new Complex(minCornerA, minCornerB)\r\n    this.maxCorner = new Complex(maxCornerA, maxCornerB)\r\n  }\r\n\r\n  iterationsUntilItEscapes(c: Complex, maxIterations: number) {\r\n    let z = new Complex(0, 0);\r\n  \r\n    for (let n = 0; n < maxIterations; n++) {\r\n      z = z.square().add(c);\r\n      if (z.hasEscaped()) {\r\n        return n;\r\n      }\r\n    }\r\n  \r\n    return maxIterations;\r\n  }\r\n\r\n  getDataStorage (ctx: CanvasRenderingContext2D): CanvasPixelDrawer {\r\n    if (!this.canvasPixelDrawer) {\r\n      this.canvasPixelDrawer = new CanvasPixelDrawer(ctx, this.width, this.height)\r\n    }\r\n    return this.canvasPixelDrawer\r\n  }\r\n\r\n  render(ctx: CanvasRenderingContext2D, maxIterations = 100) {\r\n    const minCorner = this.minCorner\r\n    const maxCorner = this.maxCorner\r\n    const dataStorage = this.getDataStorage(ctx)\r\n\r\n    for (let y = 0; y < dataStorage.getHeight(); y++) {\r\n      for (let x = 0; x < dataStorage.getWidth(); x++) {\r\n        const c = new Complex(\r\n          scale(x, 0, dataStorage.getWidth(), minCorner.getA(), maxCorner.getA()),\r\n          scale(y, 0, dataStorage.getHeight(), minCorner.getB(), maxCorner.getB())\r\n        )\r\n  \r\n        const n = this.iterationsUntilItEscapes(c, maxIterations);\r\n        const color = iterationsToColor(n, maxIterations);\r\n        dataStorage.setColor(x, y, color);\r\n      }\r\n    }\r\n\r\n    ctx.putImageData(dataStorage.toImageData(), 0, 0);\r\n  }\r\n}\r\n","export class CanvasBackup {\r\n  private originalCanvas: HTMLCanvasElement\r\n  private originalCanvasCtx: CanvasRenderingContext2D \r\n  private backupCanvas: HTMLCanvasElement\r\n  private backupCanvasCtx: CanvasRenderingContext2D \r\n\r\n  constructor(originalCanvas: HTMLCanvasElement) {\r\n    this.originalCanvas = originalCanvas;\r\n    this.originalCanvasCtx = originalCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n    \r\n    this.backupCanvas = this.setupBackupCanvas();\r\n    this.backupCanvasCtx = this.backupCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n  }\r\n\r\n  setupBackupCanvas() {\r\n    const backupCanvas = document.createElement('canvas');\r\n    backupCanvas.width = this.originalCanvas.width;\r\n    backupCanvas.height = this.originalCanvas.height;\r\n    return backupCanvas;\r\n  }\r\n\r\n  save() {\r\n    this.backupCanvasCtx.drawImage(this.originalCanvas, 0, 0);\r\n  }\r\n\r\n  restore() {\r\n    this.originalCanvasCtx.drawImage(this.backupCanvas, 0, 0);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { CanvasBackup } from \"./utils/CanvasBackup\";\r\n\r\ninterface RegionSelectableCanvasProps {\r\n  innerRef: (element: HTMLCanvasElement) => void\r\n  onChangeSelectedRegion: (\r\n    selectedAreaStartX: number,\r\n    selectedAreaEndX: number,\r\n    selectedAreaStartY: number,\r\n    selectedAreaEndY: number,\r\n  ) => void\r\n  className: string\r\n}\r\n\r\nclass RegionSelectableCanvas extends Component<RegionSelectableCanvasProps> {\r\n  private canvas: HTMLCanvasElement\r\n  private canvasCtx: CanvasRenderingContext2D\r\n  private canvasBackup: CanvasBackup\r\n  private canvasRatio: number\r\n\r\n  private originX: number\r\n  private originY: number\r\n  private mouseX: number\r\n  private mouseY: number\r\n\r\n  private selectedAreaStartX: number\r\n  private selectedAreaEndX: number\r\n  private selectedAreaStartY: number\r\n  private selectedAreaEndY: number\r\n\r\n  private mouseIsDown: boolean\r\n\r\n  onRef = (canvas: HTMLCanvasElement) => {\r\n    this.canvas = canvas\r\n    this.canvasCtx = this.canvas.getContext('2d') as CanvasRenderingContext2D\r\n    this.canvasBackup = new CanvasBackup(this.canvas)\r\n    this.canvasRatio = this.canvas.height / this.canvas.width\r\n\r\n    this.props.innerRef(canvas)\r\n  };\r\n\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.canvas = null as any as HTMLCanvasElement\r\n    this.canvasCtx = null as any as CanvasRenderingContext2D\r\n    this.canvasBackup = null as any as CanvasBackup\r\n    this.canvasRatio = null as any as number\r\n    this.originX = 0\r\n    this.originY = 0\r\n    this.mouseX = 0\r\n    this.mouseY = 0\r\n    this.selectedAreaStartX = 0\r\n    this.selectedAreaEndX = 0\r\n    this.selectedAreaStartY = 0\r\n    this.selectedAreaEndY = 0\r\n    this.mouseIsDown = false\r\n  }\r\n\r\n  handleMouseDown = (e: React.MouseEvent<HTMLCanvasElement>) => {\r\n    this.mouseIsDown = true\r\n    this.originX = e.pageX\r\n    this.originY = e.pageY\r\n  \r\n    this.canvasBackup.save()\r\n  }\r\n\r\n  handleMouseUp = () => {\r\n    this.mouseIsDown = false\r\n    this.props.onChangeSelectedRegion(\r\n      this.selectedAreaStartX,\r\n      this.selectedAreaEndX,\r\n      this.selectedAreaStartY,\r\n      this.selectedAreaEndY\r\n    )\r\n  }\r\n\r\n  calculateSelectionArea () {\r\n    const xWidth = this.mouseX - this.originX;\r\n    const yWidth = this.mouseY - this.originY;\r\n\r\n    const xPreservingAspectRatioWidth = Math.min(xWidth, yWidth / this.canvasRatio)\r\n    const yPreservingAspectRatioHeight = Math.min(yWidth, xWidth * this.canvasRatio)\r\n\r\n    const offsetX = (xWidth - xPreservingAspectRatioWidth) / 2\r\n    const offsetY = (yWidth - yPreservingAspectRatioHeight) / 2\r\n\r\n    const finalWidth = xPreservingAspectRatioWidth\r\n    const finalHeight = yPreservingAspectRatioHeight\r\n\r\n    this.selectedAreaStartX = this.originX + offsetX\r\n    this.selectedAreaStartY = this.originY + offsetY\r\n    this.selectedAreaEndX = this.selectedAreaStartX + finalWidth\r\n    this.selectedAreaEndY = this.selectedAreaStartY + finalHeight\r\n  }\r\n\r\n  handleMouseMove = (e: React.MouseEvent<HTMLCanvasElement>) => {\r\n    if (this.mouseIsDown) {\r\n      this.mouseX = e.pageX\r\n      this.mouseY = e.pageY\r\n  \r\n      this.calculateSelectionArea()  \r\n      this.canvasBackup.restore()\r\n      this.drawRawRect()\r\n      this.drawFixedRect()\r\n    }\r\n  }\r\n\r\n  drawRawRect() {\r\n    this.drawRect(\r\n      \"#00FF00\",\r\n      this.originX,\r\n      this.mouseX,\r\n      this.originY,\r\n      this.mouseY\r\n    )\r\n  }\r\n\r\n  drawFixedRect () {\r\n    this.drawRect(\r\n      \"#FF0000\",\r\n      this.selectedAreaStartX,\r\n      this.selectedAreaEndX,\r\n      this.selectedAreaStartY,\r\n      this.selectedAreaEndY\r\n    )\r\n  }\r\n\r\n  drawRect(color: string, startX: number, endX: number, startY: number, endY: number) {\r\n    this.canvasCtx.strokeStyle = color;\r\n    this.canvasCtx.strokeRect(startX, startY, endX - startX, endY - startY);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <canvas\r\n        ref={this.onRef}\r\n        width={window.innerWidth}\r\n        height={window.innerHeight}\r\n        className={this.props.className}\r\n        onMouseDown={this.handleMouseDown}\r\n        onMouseUp={this.handleMouseUp}\r\n        onMouseMove={this.handleMouseMove}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegionSelectableCanvas\r\n","import React, { Component } from \"react\";\r\n\r\nimport { sleep } from \"./utils/sleep\";\r\nimport { MandelbrotSet } from \"../../domain_ts/MandelbrotSet\";\r\nimport RegionSelectableCanvas from \"../RegionSelectableCanvas/RegionSelectableCanvas\";\r\nimport classes from './MandelbrotVisualizer.module.css'\r\n\r\ninterface MandelbrotVisualizerProps {\r\n  maxIterations: number\r\n  renderingKey: number\r\n  onChangeBounds: (minCornerA: string, minCornerB: string, maxCornerA: string, maxCornerB: string) => void\r\n}\r\n\r\nclass MandelbrotVisualizer extends Component<MandelbrotVisualizerProps> {\r\n  private mandelbrotSet: MandelbrotSet\r\n  private canvasCtx: CanvasRenderingContext2D\r\n\r\n  constructor (props: any) {\r\n    super(props)\r\n\r\n    this.mandelbrotSet = null as any as MandelbrotSet\r\n    this.canvasCtx = null as any as CanvasRenderingContext2D\r\n  }\r\n\r\n  componentDidUpdate (previousProps: MandelbrotVisualizerProps) {\r\n    if(previousProps.renderingKey !== this.props.renderingKey) {\r\n      this.refreshCanvas()\r\n    }\r\n  }\r\n\r\n  onRef = (canvas: HTMLCanvasElement) => {\r\n    this.canvasCtx = canvas.getContext('2d') as CanvasRenderingContext2D \r\n    this.mandelbrotSet = new MandelbrotSet(canvas.width, canvas.height)\r\n    this.refreshCanvas()    \r\n  };\r\n\r\n  private onChangeSelectedRegion = (startXPx: number, endXPx: number, startYPx: number, endYPx: number) => {\r\n    this.mandelbrotSet.zoomCanvas(startXPx, endXPx, startYPx, endYPx)\r\n    this.refreshCanvas()\r\n  }\r\n\r\n  private async refreshCanvas () {\r\n    this.props.onChangeBounds(\r\n      this.mandelbrotSet.minCornerA(), \r\n      this.mandelbrotSet.minCornerB(),\r\n      this.mandelbrotSet.maxCornerA(), \r\n      this.mandelbrotSet.maxCornerB()\r\n    )\r\n    await sleep(50)\r\n    console.time(\"RENDER\")\r\n    this.mandelbrotSet.render(this.canvasCtx, this.props.maxIterations)\r\n    console.timeEnd(\"RENDER\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <RegionSelectableCanvas\r\n        innerRef={this.onRef}\r\n        className={classes.canvas}\r\n        onChangeSelectedRegion={this.onChangeSelectedRegion}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MandelbrotVisualizer\r\n","import * as React from 'react';\r\n\r\nimport classes from './RenderOptions.module.css'\r\n\r\ninterface RenderOptionsProps {\r\n  onChangeMaxIterations: (maxIterations: number) => void\r\n  maxIterations: number\r\n  minCornerA: string\r\n  minCornerB: string\r\n  maxCornerA: string\r\n  maxCornerB: string\r\n  refresh: () => void\r\n}\r\n\r\nexport const RenderOptions: React.SFC<RenderOptionsProps> = ({\r\n  onChangeMaxIterations,\r\n  maxIterations,\r\n  minCornerA,\r\n  minCornerB,\r\n  maxCornerA,\r\n  maxCornerB,\r\n  refresh\r\n}) => (\r\n  <form className={classes.container} onSubmit={e => {\r\n    e.preventDefault()\r\n    refresh()\r\n  }}>\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={minCornerA}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={minCornerB}\r\n      />\r\n    </div>\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={maxCornerA}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={maxCornerB}\r\n      />\r\n    </div>\r\n    <input\r\n      type=\"number\"\r\n      onChange={e => onChangeMaxIterations(parseInt(e.target.value))}\r\n      value={maxIterations}\r\n    />\r\n    <input type=\"submit\" value=\"Refresh\"/>\r\n  </form>\r\n)\r\n","import React, { Component } from 'react';\nimport MandelbrotVisualizer from './MandelbrotVisualizer/MandelbrotVisualizer';\nimport { RenderOptions } from './RenderOptions/RenderOptions';\n\nclass App extends Component {\n  state = {\n    maxIterations: 100,\n    renderingKey: Math.random(),\n    minCornerA: \"\",\n    minCornerB: \"\",\n    maxCornerA: \"\",\n    maxCornerB: \"\",\n  }\n\n  onChangeMaxIterations = (maxIterations: number) => {\n    this.setState({\n      maxIterations\n    })\n  }\n\n  refresh = () => {\n    this.setState({\n      renderingKey: Math.random()\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <MandelbrotVisualizer\n          renderingKey={this.state.renderingKey}\n          maxIterations={this.state.maxIterations}\n          onChangeBounds={(minCornerA, minCornerB, maxCornerA, maxCornerB) => this.setState({\n            minCornerA,\n            minCornerB,\n            maxCornerA,\n            maxCornerB\n          })}\n        />\n        <RenderOptions\n          onChangeMaxIterations={this.onChangeMaxIterations}\n          maxIterations={this.state.maxIterations}\n          refresh={this.refresh}\n          minCornerA={this.state.minCornerA}\n          minCornerB={this.state.minCornerB}\n          maxCornerA={this.state.maxCornerA}\n          maxCornerB={this.state.maxCornerB}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}